name: React Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create Target Directory on EC2 with Permissions
        run: |
          ssh -i ssh_key ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "sudo mkdir -p /var/www/siita-app && sudo chmod -R 777 /var/www/siita-app"

      - name: Compress Build Files into a Tarball
        run: tar -czf build.tar.gz -C build .

      - name: Copy Tarball to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: build.tar.gz
          target: /var/www/siita-app/

      - name: Extract Tarball on EC2 with Correct Permissions
        run: |
          ssh -i ssh_key ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "sudo tar --no-same-owner --no-same-permissions -xzf /var/www/siita-app/build.tar.gz -C /var/www/siita-app/ && sudo rm /var/www/siita-app/build.tar.gz"

      - name: Set Correct Permissions on EC2
        run: |
          ssh -i ssh_key ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "sudo chmod -R 755 /var/www/siita-app"

      - name: Reload Nginx
        run: |
          ssh -i ssh_key ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "sudo systemctl reload nginx"
